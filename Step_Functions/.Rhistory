AnalysisPhase
output$AnalysisPhase
output$Condition2[output$Task == "Resting"] = "NA"
StepFolderRoot = "C:/Users/Paul/Documents/Work/PersonalityEEG/FINAL_RDF/HUMMEL/home/ForCompiling/Step_Functions/"
ListOfStepFunctionFolders = c("Statistics_All/", "Statistics_Alpha_Context/")
library(dplyr)
library(tidyr)
library(stringr)
library(effectsize)
library(data.table)
# General Forking Functions
ForkingFunctions = "/home/bay2875/ForCompiling/Analysis_Functions/Forking_FunctionsR/Forking_Functions.R"
ForkingFunctions = "C:/Users/Paul/Documents/Work/PersonalityEEG/FINAL_RDF/HUMMEL/home/ForCompiling/Analysis_Functions/Forking_FunctionsR/Forking_Functions.R"
source(ForkingFunctions)
# StepFunctions
setwd(StepFolderRoot)
for (iFolder in ListOfStepFunctionFolders) {
StepFunctions = list.files(iFolder, pattern = ".R", full.names=TRUE)
for (iFile in StepFunctions) {
source(iFile)
}}
outputfile = "C:/Users/Paul/Downloads/HummelDownloads/1.1_2.3_3.6_4.1_5.1_6.4_7.2_8.1_9.2_10.1_11.1_12.4_13.3_14.3_15.3_16.3_17.4_18.1_19.2_20.2.txt"
output = read.csv(outputfile, header = FALSE, sep = "," )
names(output) = c("ID", "Condition", "Hemisphere", "Electrode","Localisation","FrequencyBand","FrequencyRange", "EEG_Signal", "SME","Epochs")
output$EEG_Signal[abs(output$EEG_Signal) == Inf] = NA
namesi <- c("stephistory", "data")
input <- vector("list", length(namesi))
names(input) <- namesi
input$data = output
input$stephistory$Attention_Checks_Personality = "Applied" # c("Applied", "None")
input$stephistory$Outliers_Personality = "None" #  c("None", "Excluded")
input$stephistory$Personality_Variable = "BISBAS_BAS" # c("BISBAS_BAS", "RSTPQ_BAS", "Z_Score_MPQ", "Z_Score_BFI",  "z_Score_notWeighted", "z_Score_ItemNr", "z_Score_Reliability", "PCA_FirstFactor", "Factor_Analysis")
input$stephistory$Covariate = "Gender_MF" # c("None", "Gender_MF", "Gender", "Age_MF", "Age",  "AGG_Anger", "WHO5_Depression", "BFI_Open-Mindedness", "BFI_Conscientiousness", "BFI_Agreeableness", "BFI_Negative_Emotionality", "Big5_OCAN")
input$stephistory$BehavCovariate = "pleasant_arousal_perSub" # "pleasant_arousal_perSub", "pleasant_perSub", "pleasant_arousal_av"
input$stephistory$Outliers_Threshold = "3.29 SD" # c("3.29 SD", "3.29 IQ", "2.5 SD", "2.5 IQ", "None")
input$stephistory$Outliers_SME = "Applied" # c("Applied", "None")
input$stephistory$Outliers_EEG = "Applied" # c("Applied", "None")
input$stephistory$Treat_Outliers = "Exclude" # c("Exclude", "Replace")
input$stephistory$Normalize = "Rankit" # c("Rankit", "Log", "None")
input$stephistory$Center = "Centered" # c("Centered", "None")
input$stephistory$Determine_Significance = "Holm"
input = Attention_Checks_Personality(input, input$stephistory$Attention_Checks_Personality)
input = Outliers_Personality(input, input$stephistory$Outliers_Personality)
input = Personality_Variable(input, input$stephistory$Personality_Variable)
input = Covariate(input, input$stephistory$Covariate)
input = BehavCovariate(input, input$stephistory$BehavCovariate)
input = Outliers_Threshold(input, input$stephistory$Outliers_Threshold)
input = Outliers_SME(input, input$stephistory$Outliers_SME)
input = Outliers_EEG(input, input$stephistory$Outliers_EEG)
input = Treat_Outliers(input, input$stephistory$Treat_Outliers)
input = Normalize(input, input$stephistory$Normalize)
input = Center(input, input$stephistory$Center)
choice = "Rankit"
output = input$data
# For Hypotheses 1.5 and 2 Average across conditions and calculate Correlations per Condition
Average_Across_Conditions = output %>%
group_by(Task, AnalysisPhase, ID, across(all_of(c(additional_Factors_Name, Covariate_Name, Personality_Name)))) %>%
summarize(EEG_Signal = mean(EEG_Signal, na.rm = TRUE),
SME = mean(SME, na.rm = TRUE),
Epochs = mean(Epochs, na.rm = TRUE)) %>%
ungroup()
Correlations_Within_Conditions = output %>%
group_by(Task, AnalysisPhase, Condition, across(all_of(c(additional_Factors_Name)))) %>%
summarize(Corelation_with_Personality = cor.test(EEG_Signal, get(Personality_Name))$estimate) %>%
ungroup()
Correlations_Within_Both_Conditions = output %>%
group_by(Task, AnalysisPhase, Condition, Condition2, across(all_of(c(additional_Factors_Name)))) %>%
summarize(Corelation_with_Personality = cor.test(EEG_Signal, get(Personality_Name))$estimate) %>%
ungroup()  %>%
unite(Condition, Condition, Condition2, sep = "_", remove = TRUE)
#############
Name_Test = c("Anticipation_RestGambling")
Task = c("Gambling", "Resting")
H1.5.2 = test_Hypothesis( Name_Test,lm_formula, Average_Across_Conditions, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
Name_Test = c("Anticipation_RestStroop")
Task = c("Stroop", "Resting")
lm_formula =   paste( "EEG_Signal ~ (Task", additional_Factor_Formula, ")", Covariate_Formula)
AnalysisPhase = c("Anticipation", "NA")
collumns_to_keep = c("Task", Covariate_Name, additional_Factors_Name)  # Personality_Name not needed for this
Effect_of_Interest = "Task"
H1.5.1 = test_Hypothesis( Name_Test,lm_formula, Average_Across_Conditions, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
Name_Test = c("Anticipation_RestStroop")
Task = c("Stroop", "Resting")
lm_formula =   paste( "EEG_Signal ~ (Task", additional_Factor_Formula, ")", Covariate_Formula)
AnalysisPhase = c("Anticipation", "NA")
collumns_to_keep = c("Task", Covariate_Name, additional_Factors_Name)  # Personality_Name not needed for this
Effect_of_Interest = "Task"
Task
AnalysisPhase
output$AnalysisPhase
# General Forking Functions
ForkingFunctions = "/home/bay2875/ForCompiling/Analysis_Functions/Forking_FunctionsR/Forking_Functions.R"
ForkingFunctions = "C:/Users/Paul/Documents/Work/PersonalityEEG/FINAL_RDF/HUMMEL/home/ForCompiling/Analysis_Functions/Forking_FunctionsR/Forking_Functions.R"
source(ForkingFunctions)
# StepFunctions
setwd(StepFolderRoot)
for (iFolder in ListOfStepFunctionFolders) {
StepFunctions = list.files(iFolder, pattern = ".R", full.names=TRUE)
for (iFile in StepFunctions) {
source(iFile)
}}
outputfile = "C:/Users/Paul/Downloads/HummelDownloads/1.1_2.3_3.6_4.1_5.1_6.4_7.2_8.1_9.2_10.1_11.1_12.4_13.3_14.3_15.3_16.3_17.4_18.1_19.2_20.2.txt"
output = read.csv(outputfile, header = FALSE, sep = "," )
names(output) = c("ID", "Condition", "Hemisphere", "Electrode","Localisation","FrequencyBand","FrequencyRange", "EEG_Signal", "SME","Epochs")
output$EEG_Signal[abs(output$EEG_Signal) == Inf] = NA
namesi <- c("stephistory", "data")
input <- vector("list", length(namesi))
names(input) <- namesi
input$data = output
input$stephistory$Attention_Checks_Personality = "Applied" # c("Applied", "None")
input$stephistory$Outliers_Personality = "None" #  c("None", "Excluded")
input$stephistory$Personality_Variable = "BISBAS_BAS" # c("BISBAS_BAS", "RSTPQ_BAS", "Z_Score_MPQ", "Z_Score_BFI",  "z_Score_notWeighted", "z_Score_ItemNr", "z_Score_Reliability", "PCA_FirstFactor", "Factor_Analysis")
input$stephistory$Covariate = "Gender_MF" # c("None", "Gender_MF", "Gender", "Age_MF", "Age",  "AGG_Anger", "WHO5_Depression", "BFI_Open-Mindedness", "BFI_Conscientiousness", "BFI_Agreeableness", "BFI_Negative_Emotionality", "Big5_OCAN")
input$stephistory$BehavCovariate = "pleasant_arousal_perSub" # "pleasant_arousal_perSub", "pleasant_perSub", "pleasant_arousal_av"
input$stephistory$Outliers_Threshold = "3.29 SD" # c("3.29 SD", "3.29 IQ", "2.5 SD", "2.5 IQ", "None")
input$stephistory$Outliers_SME = "Applied" # c("Applied", "None")
input$stephistory$Outliers_EEG = "Applied" # c("Applied", "None")
input$stephistory$Treat_Outliers = "Exclude" # c("Exclude", "Replace")
input$stephistory$Normalize = "Rankit" # c("Rankit", "Log", "None")
input$stephistory$Center = "Centered" # c("Centered", "None")
input$stephistory$Determine_Significance = "Holm"
input = Attention_Checks_Personality(input, input$stephistory$Attention_Checks_Personality)
input = Outliers_Personality(input, input$stephistory$Outliers_Personality)
input = Personality_Variable(input, input$stephistory$Personality_Variable)
input = Covariate(input, input$stephistory$Covariate)
input = BehavCovariate(input, input$stephistory$BehavCovariate)
input = Outliers_Threshold(input, input$stephistory$Outliers_Threshold)
input = Outliers_SME(input, input$stephistory$Outliers_SME)
input = Outliers_EEG(input, input$stephistory$Outliers_EEG)
input = Treat_Outliers(input, input$stephistory$Treat_Outliers)
input = Normalize(input, input$stephistory$Normalize)
input = Center(input, input$stephistory$Center)
choice = "Rankit"
output = input$data
# For Hypotheses 1.5 and 2 Average across conditions and calculate Correlations per Condition
Average_Across_Conditions = output %>%
group_by(Task, AnalysisPhase, ID, across(all_of(c(additional_Factors_Name, Covariate_Name, Personality_Name)))) %>%
summarize(EEG_Signal = mean(EEG_Signal, na.rm = TRUE),
SME = mean(SME, na.rm = TRUE),
Epochs = mean(Epochs, na.rm = TRUE)) %>%
ungroup()
Correlations_Within_Conditions = output %>%
group_by(Task, AnalysisPhase, Condition, across(all_of(c(additional_Factors_Name)))) %>%
summarize(Corelation_with_Personality = cor.test(EEG_Signal, get(Personality_Name))$estimate) %>%
ungroup()
Correlations_Within_Both_Conditions = output %>%
group_by(Task, AnalysisPhase, Condition, Condition2, across(all_of(c(additional_Factors_Name)))) %>%
summarize(Corelation_with_Personality = cor.test(EEG_Signal, get(Personality_Name))$estimate) %>%
ungroup()  %>%
unite(Condition, Condition, Condition2, sep = "_", remove = TRUE)
Name_Test = c("Anticipation_RestStroop")
Task = c("Stroop", "Resting")
lm_formula =   paste( "EEG_Signal ~ (Task", additional_Factor_Formula, ")", Covariate_Formula)
AnalysisPhase = c("Anticipation", "NA")
collumns_to_keep = c("Task", Covariate_Name, additional_Factors_Name)  # Personality_Name not needed for this
Effect_of_Interest = "Task"
H1.5.1 = test_Hypothesis( Name_Test,lm_formula, Average_Across_Conditions, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
Name_Test = c("Anticipation_RestGambling")
Task = c("Gambling", "Resting")
H1.5.2 = test_Hypothesis( Name_Test,lm_formula, Average_Across_Conditions, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
H1.5.2
H1.5.1
Name_Test = c("Test")
Task = c("Resting")
lm_formula =   paste( "EEG_Signal ~ (Condition", additional_Factor_Formula, ")", Covariate_Formula)
test_Hypothesis( Name_Test,lm_formula, Average_Across_Conditions, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
lm_formula
Name_Test = c("Test")
Task = c("Resting")
lm_formula =   paste( "EEG_Signal ~ (Condition", additional_Factor_Formula, ")", Covariate_Formula)
Effect_of_Interest = "Condition"
test_Hypothesis( Name_Test,lm_formula, Average_Across_Conditions, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
Subset = output[output$Task %in% Task & output$AnalysisPhase %in% AnalysisPhase ,
names(output) %in% c("ID", "Epochs", "SME", "EEG_Signal", collumns_to_keep)]
Subset = Subset[complete.cases(Subset), ]
Model_Result = lm(as.formula(lm_formula),
Subset)
AnovaModel = anova(Model_Result)
Name_Test = c("Test")
Task = c("Resting")
lm_formula =   paste( "EEG_Signal ~ (", additional_Factor_Formula, ")", Covariate_Formula)
Effect_of_Interest = ""
test_Hypothesis( Name_Test,lm_formula, Average_Across_Conditions, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
lm_formula
lm_formula =   paste( "EEG_Signal ~ (1", additional_Factor_Formula, ")", Covariate_Formula)
Effect_of_Interest = ""
test_Hypothesis( Name_Test,lm_formula, Average_Across_Conditions, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
Subset = output[output$Task %in% Task & output$AnalysisPhase %in% AnalysisPhase ,
names(output) %in% c("ID", "Epochs", "SME", "EEG_Signal", collumns_to_keep)]
Subset = Subset[complete.cases(Subset), ]
Model_Result = lm(as.formula(lm_formula),
Subset)
Model_Result
anova(Model_Result)
lm_formula
Name_Test = c("Test")
Task = c("Resting")
lm_formula =    "EEG_Signal ~ ( Hemisphere  *  Localisation  *  Electrode ) + Covariate_Gender"
Effect_of_Interest = ""
test_Hypothesis( Name_Test,lm_formula, Average_Across_Conditions, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
Subset = output[output$Task %in% Task & output$AnalysisPhase %in% AnalysisPhase ,
names(output) %in% c("ID", "Epochs", "SME", "EEG_Signal", collumns_to_keep)]
Subset = Subset[complete.cases(Subset), ]
Model_Result = lm(as.formula(lm_formula),
Subset)
AnovaModel = anova(Model_Result)
# Expand Effect of Interest with additional factors (Hemisphere, Localisation... no Effect expected for Electrode)
if ("Hemisphere" %in% collumns_to_keep) {
Effect_of_Interest = paste0(Effect_of_Interest, ":Hemisphere")
}
if ("Localisation" %in% collumns_to_keep) {
Effect_of_Interest = paste0(Effect_of_Interest, ":Localisation")
}
if ("FrequencyBand" %in% collumns_to_keep) {
Effect_of_Interest = paste0(Effect_of_Interest, ":FrequencyBand")
}
AnovaModel
unique(Subset$ID)
lm_formula
Model_Result = lm(as.formula(lm_formula),
Subset)
Model_Result
View(Subset)
Name_Test = c("Test")
Task = c("Resting")
lm_formula =    "EEG_Signal ~ ( Hemisphere  *  Localisation  ) + Covariate_Gender"
Effect_of_Interest = ""
test_Hypothesis( Name_Test,lm_formula, Average_Across_Conditions, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
Subset = output[output$Task %in% Task & output$AnalysisPhase %in% AnalysisPhase ,
names(output) %in% c("ID", "Epochs", "SME", "EEG_Signal", collumns_to_keep)]
Subset = Subset[complete.cases(Subset), ]
Model_Result = lm(as.formula(lm_formula),
Subset)
AnovaModel = anova(Model_Result)
AnovaModel
Name_Test = c("Test")
Task = c("Resting")
lm_formula =    "EEG_Signal ~ (( Hemisphere  *  Localisation  ) + Electrode )+ Covariate_Gender"
Effect_of_Interest = ""
test_Hypothesis( Name_Test,lm_formula, Average_Across_Conditions, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
Subset = output[output$Task %in% Task & output$AnalysisPhase %in% AnalysisPhase ,
names(output) %in% c("ID", "Epochs", "SME", "EEG_Signal", collumns_to_keep)]
Subset = Subset[complete.cases(Subset), ]
Model_Result = lm(as.formula(lm_formula),
Subset)
AnovaModel = anova(Model_Result)
AnovaModel
# Get possible additional factors
Possible_Factors = c("Hemisphere", "Localisation", "Electrode", "FrequencyBand")
# Do not add Localisation if if only one electrode(pair) per Localisation
Levels_L = length(unlist(unique(output$Localisation)))
Levels_E = length(unlist(unique(output$Electrode)))
Levels_H = length(unlist(unique(output$Hemisphere)))
if (Levels_H*Levels_E < Levels_L ) { Possible_Factors = c("Hemisphere", "Electrode", "FrequencyBand") }
additional_Factors_Name = vector()
additional_Factor_Formula = ""
# keep only if not singular
for (ifactor in Possible_Factors) {
if(length(unlist(unique(output[,ifactor])))>1) {
if (ifactor == "Electrode") {
additional_Factor_Formula = paste(additional_Factor_Formula, " + ", ifactor) # Electrode can not Interact with other Localisation+Hemisphere
} else {
additional_Factor_Formula = paste(additional_Factor_Formula, " * ", ifactor)
}
additional_Factors_Name = c(additional_Factors_Name, ifactor)
}}
Name_Test = c("Anticipation_Gambling")
lm_formula =   paste( "EEG_Signal ~ (Condition", additional_Factor_Formula, ")", Covariate_Formula)
Task = "Gambling"
AnalysisPhase = "Anticipation"
collumns_to_keep = c("Condition", Covariate_Name, additional_Factors_Name)  # Personality_Name not needed for this
Effect_of_Interest = "Condition"
H1.1 = test_Hypothesis( Name_Test,lm_formula, output, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
H1.1
# Hypothesis 1.2 ASY Gambling Consumption ~ Reward Magnitude * Feedback
Name_Test = c("Consumption_Gambling_Valence")
lm_formula =   paste( "EEG_Signal ~ (Condition * Condition2 ", additional_Factor_Formula, ")", Covariate_Formula)
Task = "Gambling"
AnalysisPhase = "Consumption"
collumns_to_keep = c("Condition", "Condition2", Covariate_Name, additional_Factors_Name)  # Personality_Name not needed for this
Effect_of_Interest = "Condition2"
H1.2.1 = test_Hypothesis( Name_Test,lm_formula, output, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
H1.2.1
Name_Test = c("Consumption_Gambling_Magnitude")
Effect_of_Interest = "Condition"
H1.2.2_prepA = test_Hypothesis( Name_Test,lm_formula, output, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
Effect_of_Interest = "Condition:Condition2"
H1.2.2_prepB = test_Hypothesis( Name_Test,lm_formula, output, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
# Take the larger effects of the two (interaction or main effect of magnitude)
if (!is.na(H1.2.2_prepA[3])) {
if (H1.2.2_prepA[3]>H1.2.2_prepB[3]) {
H1.2.2 = H1.2.2_prepA
} else {
H1.2.2 = H1.2.2_prepB
}
}else{
H1.2.2 = H1.2.2_prepA
}
if (H1.2.2_prepA[3]>H1.2.2_prepB[3]) {
H1.2.2 = H1.2.2_prepA
} else {
H1.2.2 = H1.2.2_prepB
}
H1.2.2
# Hypothesis 1.3 ASY Stroop Anticipation ~ Picture category (before)
Name_Test = c("Anticipation_Stroop")
lm_formula =   paste( "EEG_Signal ~ (Condition", additional_Factor_Formula, ")", Covariate_Formula)
Task = "Stroop"
AnalysisPhase = "Anticipation"
collumns_to_keep = c("Condition", Covariate_Name, additional_Factors_Name)  # Personality_Name not needed for this
Effect_of_Interest = "Condition"
H1.3 = test_Hypothesis( Name_Test,lm_formula, output, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
H1.3
# Hypothesis 1.4 ASY Stroop Consumption ~ Picture category * Pleasure Ratings
Name_Test = c("Consumption_Stroop")
Behavior_Formula = paste("+ Condition * ", Behavior_Name,  collapse = ' ')
lm_formula =  paste( "EEG_Signal ~ ((Condition", Behavior_Formula, ")", additional_Factor_Formula, ")", Covariate_Formula )
Task = "Stroop"
AnalysisPhase = "Consumption"
collumns_to_keep = c("Condition", Covariate_Name, additional_Factors_Name, Behavior_Name)  # Personality_Name not needed for this
Effect_of_Interest = "Condition"
H1.4.1 = test_Hypothesis( Name_Test,lm_formula, output, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
H1.4.1
Name_Test = c("Consumption_Stroop_Rating")
Effect_of_Interest = paste0("Condition:", Behavior_Name[idx_Valence = which(grepl("Pleasure", Behavior_Name))]) # Add Index if Arousal also modelled
H1.4.2 = test_Hypothesis( Name_Test,lm_formula, output, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
H1.4.2
# Hypothesis 1.5 ASY ~ Stroop Anticipation and Rest
# Test Anticipation AV between Resting and other Task
Name_Test = c("Anticipation_RestStroop")
Task = c("Stroop", "Resting")
lm_formula =   paste( "EEG_Signal ~ (Task", additional_Factor_Formula, ")", Covariate_Formula)
AnalysisPhase = c("Anticipation", "NA")
collumns_to_keep = c("Task", Covariate_Name, additional_Factors_Name)  # Personality_Name not needed for this
Effect_of_Interest = "Task"
H1.5.1 = test_Hypothesis( Name_Test,lm_formula, Average_Across_Conditions, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
H1.5.1
Name_Test = c("Anticipation_RestGambling")
Task = c("Gambling", "Resting")
H1.5.2 = test_Hypothesis( Name_Test,lm_formula, Average_Across_Conditions, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
# Hypothesis 2.1 ASY Gambling Anticipation ~ Reward Magnitude * Personality
Name_Test = c("Personality_Anticipation_Gambling")
lm_formula =   paste( "EEG_Signal ~ (Condition", Personality_Formula, additional_Factor_Formula, ")", Covariate_Formula)
Task = "Gambling"
AnalysisPhase = "Anticipation"
collumns_to_keep = c("Condition", Covariate_Name, additional_Factors_Name, Personality_Name)
Effect_of_Interest = paste0("Condition:",Personality_Name)
H2.1_prep = test_Hypothesis( Name_Test,lm_formula, output, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
# Hypothesis 2.2 ASY Gambling Consumption ~ Reward Magnitude * Feedback
Name_Test = c("Personality_Consumption_Gambling")
lm_formula =   paste( "EEG_Signal ~ (Condition * Condition2 ", Personality_Formula, additional_Factor_Formula, ")", Covariate_Formula)
Task = "Gambling"
AnalysisPhase = "Consumption"
collumns_to_keep = c("Condition", "Condition2", Covariate_Name, additional_Factors_Name, Personality_Name)
Effect_of_Interest = paste0("Condition2:",Personality_Name)
H2.2.1_prep = test_Hypothesis( Name_Test,lm_formula, output, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
Name_Test = c("Personality_Consumption_GamblingMagnitude")
Effect_of_Interest = paste0("Condition:",Personality_Name)
H2.2.2_prepA = test_Hypothesis( Name_Test,lm_formula, output, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
Effect_of_Interest = paste0("Condition:Condition2:",Personality_Name)
H2.2.2_prepB = test_Hypothesis( Name_Test,lm_formula, output, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
# Hypothesis 2.3 ASY Stroop Anticipation ~ Picture category (before) * Personality
Name_Test = c("Anticipation_Stroop")
lm_formula =   paste( "EEG_Signal ~ (Condition", Personality_Formula, additional_Factor_Formula, ")", Covariate_Formula)
Task = "Stroop"
AnalysisPhase = "Anticipation"
collumns_to_keep = c("Condition", Covariate_Name, additional_Factors_Name, Personality_Name)  # Personality_Name not needed for this
Effect_of_Interest = paste0("Condition:",Personality_Name)
H2.3_prep = test_Hypothesis( Name_Test,lm_formula, output, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
# Hypothesis 2.4 ASY Stroop Consumption ~ Picture category * Pleasure Ratings * Personality
Name_Test = c("Consumption_Stroop")
Behavior_Formula = paste("+ Condition * ", Behavior_Name,  collapse = ' ')
lm_formula =  paste( "EEG_Signal ~ (((Condition", Behavior_Formula,  ")",Personality_Formula, ")", additional_Factor_Formula, ")", Covariate_Formula )
Task = "Stroop"
AnalysisPhase = "Consumption"
collumns_to_keep = c("Condition", Covariate_Name, additional_Factors_Name, Personality_Name, Behavior_Name)  # Personality_Name not needed for this
Effect_of_Interest = paste0("Condition:",Personality_Name)
H2.4.1_prep = test_Hypothesis( Name_Test,lm_formula, output, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
Name_Test = c("Consumption_Stroop_Rating")
Effect_of_Interest = paste0("Condition:", Behavior_Name[idx_Valence = which(grepl("Pleasure", Behavior_Name))],":", Personality_Name) # Add Index if Arousal also modelled
H2.4.2_prep = test_Hypothesis( Name_Test,lm_formula, output, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
Extracted_Data = output[output$Task == "Resting", names(Average_Across_Conditions) ]
# Hypothesis 2.1 ASY Gambling Anticipation ~ Reward Magnitude * Personality
Task = "Gambling"
AnalysisPhase = "Anticipation"
SignTest = H2.1_prep[6]
Extracted_Data =  extract_StrongestCorrelation(SignTest, Task, AnalysisPhase, additional_Factors_Name, Extracted_Data, Correlations_Within_Conditions, Average_Across_Conditions)
# Hypothesis 2.2 ASY Gambling Consumption ~ Reward Magnitude * Feedback
Task = "Gambling"
AnalysisPhase = "Consumption"
# Take the larger effects of the two (interaction or main effect of magnitude)
if (H2.2.2_prepA[3]>H2.2.2_prepB[3]) { # Main Effect
SignTest = H2.2.2_prepA[6]
Extracted_Data =  extract_StrongestCorrelation(SignTest, Task, AnalysisPhase, additional_Factors_Name, Extracted_Data, Correlations_Within_Conditions, Average_Across_Conditions)
} else { # Interaction
SignTest = H2.2.2_prepB[6]
Extracted_Data =  extract_StrongestCorrelation(SignTest, Task, AnalysisPhase, additional_Factors_Name, Extracted_Data, Correlations_Within_Both_Conditions , Average_Across_Conditions)
}
# Hypothesis 2.3 ASY Stroop Anticipation ~ Picture category (before) * Personality
Task = "Stroop"
AnalysisPhase = "Anticipation"
SignTest = H2.3_prep[6]
Extracted_Data =  extract_StrongestCorrelation(SignTest, Task, AnalysisPhase, additional_Factors_Name, Extracted_Data, Correlations_Within_Conditions, Average_Across_Conditions)
# Hypothesis 2.4 ASY Stroop Consumption ~ Picture category * Pleasure Ratings * Personality
Task = "Stroop"
AnalysisPhase = "Consumption"
SignTest = H2.4.1_prep[6]
Extracted_Data =  extract_StrongestCorrelation(SignTest, Task, AnalysisPhase, additional_Factors_Name, Extracted_Data, Correlations_Within_Conditions, Average_Across_Conditions)
lm_formula =   paste( Personality_Name, " ~ ((Task * EEG_Signal)",additional_Factor_Formula, ")", Covariate_Formula)
collumns_to_keep = c("Task", Covariate_Name, additional_Factors_Name, Personality_Name)
Effect_of_Interest = paste0("Task:EEG_Signal")
Task = c("Gambling", "Resting")
AnalysisPhase = c("Anticipation", "NA")
Name_Test = c("Anticipation_RestGambling_Personality")
H2.1 = test_Hypothesis( Name_Test,lm_formula, Extracted_Data, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
H2.1
# Hypothesis 2.2 ASY Gambling Consumption ~ Reward Magnitude * Feedback
Task = c("Gambling", "Resting")
AnalysisPhase = c("Consumption", "NA")
Name_Test = c("Consumption_RestGambling_Personality")
H2.2 = test_Hypothesis( Name_Test,lm_formula, Extracted_Data, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
# Hypothesis 2.3 ASY Stroop Anticipation ~ Picture category (before) * Personality
Task = c("Stroop", "Resting")
AnalysisPhase = c("Anticipation", "NA")
Name_Test = c("Anticipation_RestStroop_Personality")
H2.3 = test_Hypothesis( Name_Test,lm_formula, Extracted_Data, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
# Hypothesis 2.4 ASY Stroop Consumption ~ Picture category * * Personality
Task = c("Stroop", "Resting")
AnalysisPhase = c("Consumption", "NA")
Name_Test = c("Consumption_RestStroop_Personality")
H2.4 = test_Hypothesis( Name_Test,lm_formula, Extracted_Data, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
Estimates_H1 = as.data.frame(rbind(H1.1, H1.2.1, H1.2.2,  H1.3, H1.4.1,  H1.4.2))
Estimates_H1
comparisons = 6
if (choice == "Holmes"){
Estimates_H1$p_Value = p.adjust(Estimates_H1$p_Value, method = "holm", n = comparisons)
}  else if (choice == "Bonferroni"){
Estimates_H1$p_Value = p.adjust(Estimates_H1$p_Value, method = "bonferroni", n = comparisons)
}
Estimates = rbind(Estimates_H1, H1.5.1, H1.5.2, H2.1,H2.2, H2.3, H2.4 )
Estimates
Task = c("Resting")
AnalysisPhase = c("NA")
Name_Test = c("Resting_Personality")
H2.5x = test_Hypothesis( Name_Test,lm_formula, Extracted_Data, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
Task = c("Resting")
AnalysisPhase = c("NA")
lm_formula =   paste( Personality_Name, " ~ ((EEG_Signal)",additional_Factor_Formula, ")", Covariate_Formula)
Name_Test = c("Resting_Personality")
H2.5x = test_Hypothesis( Name_Test,lm_formula, Extracted_Data, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
H2.5x
Task = c("Resting")
AnalysisPhase = c("NA")
lm_formula =   paste( Personality_Name, " ~ ((EEG_Signal)",additional_Factor_Formula, ")", Covariate_Formula)
Name_Test = c("Resting_Personality")
Effect_of_Interest = paste0("EEG_Signal")
H2.5x = test_Hypothesis( Name_Test,lm_formula, Extracted_Data, Effect_of_Interest, collumns_to_keep, Task, AnalysisPhase)
H2.5x
Estimates_H1 = as.data.frame(rbind(H1.1, H1.2.1, H1.2.2,  H1.3, H1.4.1,  H1.4.2))
comparisons = 6
if (choice == "Holmes"){
Estimates_H1$p_Value = p.adjust(Estimates_H1$p_Value, method = "holm", n = comparisons)
}  else if (choice == "Bonferroni"){
Estimates_H1$p_Value = p.adjust(Estimates_H1$p_Value, method = "bonferroni", n = comparisons)
}
Estimates = rbind(Estimates_H1, H1.5.1, H1.5.2, H2.1,H2.2, H2.3, H2.4, H2.5x )
Estimates
# General Forking Functions
ForkingFunctions = "/home/bay2875/ForCompiling/Analysis_Functions/Forking_FunctionsR/Forking_Functions.R"
ForkingFunctions = "C:/Users/Paul/Documents/Work/PersonalityEEG/FINAL_RDF/HUMMEL/home/ForCompiling/Analysis_Functions/Forking_FunctionsR/Forking_Functions.R"
source(ForkingFunctions)
# StepFunctions
setwd(StepFolderRoot)
for (iFolder in ListOfStepFunctionFolders) {
StepFunctions = list.files(iFolder, pattern = ".R", full.names=TRUE)
for (iFile in StepFunctions) {
source(iFile)
}}
outputfile = "C:/Users/Paul/Downloads/HummelDownloads/1.1_2.3_3.6_4.1_5.1_6.4_7.2_8.1_9.2_10.1_11.1_12.4_13.3_14.3_15.3_16.3_17.4_18.1_19.2_20.2.txt"
output = read.csv(outputfile, header = FALSE, sep = "," )
names(output) = c("ID", "Condition", "Hemisphere", "Electrode","Localisation","FrequencyBand","FrequencyRange", "EEG_Signal", "SME","Epochs")
output$EEG_Signal[abs(output$EEG_Signal) == Inf] = NA
namesi <- c("stephistory", "data")
input <- vector("list", length(namesi))
names(input) <- namesi
input$data = output
input$stephistory$Attention_Checks_Personality = "Applied" # c("Applied", "None")
input$stephistory$Outliers_Personality = "None" #  c("None", "Excluded")
input$stephistory$Personality_Variable = "BISBAS_BAS" # c("BISBAS_BAS", "RSTPQ_BAS", "Z_Score_MPQ", "Z_Score_BFI",  "z_Score_notWeighted", "z_Score_ItemNr", "z_Score_Reliability", "PCA_FirstFactor", "Factor_Analysis")
input$stephistory$Covariate = "Gender_MF" # c("None", "Gender_MF", "Gender", "Age_MF", "Age",  "AGG_Anger", "WHO5_Depression", "BFI_Open-Mindedness", "BFI_Conscientiousness", "BFI_Agreeableness", "BFI_Negative_Emotionality", "Big5_OCAN")
input$stephistory$BehavCovariate = "pleasant_arousal_perSub" # "pleasant_arousal_perSub", "pleasant_perSub", "pleasant_arousal_av"
input$stephistory$Outliers_Threshold = "3.29 SD" # c("3.29 SD", "3.29 IQ", "2.5 SD", "2.5 IQ", "None")
input$stephistory$Outliers_SME = "Applied" # c("Applied", "None")
input$stephistory$Outliers_EEG = "Applied" # c("Applied", "None")
input$stephistory$Treat_Outliers = "Exclude" # c("Exclude", "Replace")
input$stephistory$Normalize = "Rankit" # c("Rankit", "Log", "None")
input$stephistory$Center = "Centered" # c("Centered", "None")
input$stephistory$Determine_Significance = "Holm"
input = Attention_Checks_Personality(input, input$stephistory$Attention_Checks_Personality)
input = Outliers_Personality(input, input$stephistory$Outliers_Personality)
input = Personality_Variable(input, input$stephistory$Personality_Variable)
input = Covariate(input, input$stephistory$Covariate)
input = BehavCovariate(input, input$stephistory$BehavCovariate)
input = Outliers_Threshold(input, input$stephistory$Outliers_Threshold)
input = Outliers_SME(input, input$stephistory$Outliers_SME)
input = Outliers_EEG(input, input$stephistory$Outliers_EEG)
input = Treat_Outliers(input, input$stephistory$Treat_Outliers)
input = Normalize(input, input$stephistory$Normalize)
input = Center(input, input$stephistory$Center)
choice = "Rankit"
output = input$data
Determine_Significance(input, input$stephistory$Determine_Significance)
